---
- name: Run Windows execute.cmd file
  hosts: 10.10.5.185
  # become: yes
  # vars:
  #   ansible_become_method: runas
  #   ansible_become_user: Administrator
  #   ansible_become_password: 1qaz2wsx
  tasks:
    - name: Execute .cmd file with password
      win_shell:
        path: C:\Users\inndata-dat-005\Just\ARC\execute.bat
        _raw_params: C:\Users\inndata-dat-005\Just\ARC\execute.bat

      async: 10  # Set the timeout to 30 seconds
      poll: 0
      register: cmd_result

    - name: Wait for the task to complete (max 30 seconds)
      async_status:
        jid: "{{ cmd_result.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 2
      delay: 0
      ignore_errors: true

    - name: Display task result
      debug:
        var: cmd_result
      # - name: Display cmd_result
      # debug:
      #   var: cmd_result

        # state: present
    #C:\Users\inndata-dat-005\Just\ARC\execute.bat    
  # gather_facts: false
  # become_method: runas
  # become_user: Administrator
  # become: yes
  # vars:
  #   ansible_become_password: 1qaz2wsx
  # tasks:
  #   - name: Execute .cmd file with password
  #     win_command: "C:\\Users\\inndata-dat-005\\Just\\ARC\\execute.cmd /s /q"

  # tasks:
  #   - name: check connection
  #     win_ping:
        # win_file: 
        #    path: C:\\admintesting
        #    state: directory
  # tasks:
  #   - name: Execute command to suppress UAC prompt
  #     win_shell: |
  #       $command = "C:\Users\inndata-dat-005\Just\ARC\execute.cmd"
  #       $processInfo = New-Object System.Diagnostics.ProcessStartInfo
  #       $processInfo.FileName = $command
  #       $processInfo.UseShellExecute = $false
  #       $processInfo.RedirectStandardOutput = $true
  #       $process = [System.Diagnostics.Process]::Start($processInfo)
  #       $process.WaitForExit()
  #     register: result
  #     ignore_errors: yes  # Ignore any errors during execution

  #   - name: Display command output (optional)
  #     debug:
  #       var: result.stdout_lines

#   tasks:
    # - name: "This should create a bucket"
    #   minio_bucket:
    #     s3_url: https://10.10.5.76:9001
    #     name: test-bucket
    #     access_key: DW1v3EfdBLR0J1GVhdjC
    #     secret_key: 5VytN79seVFxeYmAmwLlYUF4O0rp0Hlnex50GyTf
    #     state: present
    #     policy: read-only
# ---
# - name: Copy file from Unix server to Windows server
#   hosts: 10.10.5.185
#   gather_facts: no
#   tasks:
#      - name: Transfer files via SFTP
#        expect:
#          command: sftp mysftp@10.10.5.76
#          responses:
#            # "(yes/no)?": "yes\n"
#            "password": "123456\n"
#          timeout: 30
#          echo: yes
#          spawn: yes
#          commands:
#            - "mget -r /sftp-upload/Ping/Replicadb C:\\\\kapalya-drivers\\\\"
#            - "exit"
